[
Version=1
]
[
ObjTp=FSgntr
Sgntr=UserMacro
RelVrs=4.07.03
IntStrVrs=2
MinSMWVrs=3.00.00
MinTIOVrs=0
SavedBy=SMW4.07.03
]
[
ObjTp=Hd
S0Nd=1
S1Nd=2
SLNd=3
PrNm=Rollease Acmeda ARC Motor Control v1.0.umc
CmVr=3.03
DbVr=64.00.001.00
DvcDbVr=87.05.001.00
PgmNm=Natalie Jackman
DlrNm=Control Concepts, Inc.
CltNm=Rollease Acmeda ARC Motor Control v1.0
Incl=1766,2574,2651,2817,2886,2938,2947,3181,3197,3233,3710,3735,3736,3816,3888,4176,4308,4476,4591,4769,5360,5388,5420,5455,
McNm=Rollease Acmeda ARC Motor Control v1.0
SmVr=1040
DvVr=1040
TpN1=1
TpN2=2
TpN3=3
TpN4=4
TpN5=5
PdfHelp=Rollease Acmeda ARC Motor Control v1.0 Help.pdf
APg=1
FltTmp=1
FpCS=0
EnType=0
ZeroOnIoOk=0
SGMethod=1
]
[
ObjTp=Bk
Nm1=\
Sx1=0
Sy1=0
Mx1=0
]
[
ObjTp=Bw
H=1
Lx=0
Ly=848
Rx=1618
Ry=1272
Xm=-1
Ym=-1
SH=6
Z=100
Ht=4
Hi=6
]
[
ObjTp=Bw
H=1
Lx=0
Ly=424
Rx=1618
Ry=848
Xm=-1
Ym=-1
SH=7
Z=100
Ht=1
Hi=3
]
[
ObjTp=Bw
H=1
Lx=0
Ly=0
Rx=1618
Ry=424
Xm=-1
Ym=-1
SH=12
Z=100
Ht=3
Hi=1
]
[
ObjTp=Symbol
Name=Rollease Acmeda ARC Motor Control v1.0
Code=1
SmplCName=Rollease Acmeda ARC Motor Control v1.0.umc
Smpl-C=3
CompilerTimePrecision=Single_Or_Double_Precision
Exclusions=1,19,20,21,88,89,167,168,179,213,214,215,216,217,225,226,248,249,266,267,310,362,378,380,405,407,408,409,478,522,537,554,586,590,611,624,718,756,767,830,841,842,854,883,955,1032,1062,1079,1128,1129,1134,1140,1157,1158,1195,1199,1220,1221,1222,1223,1299,1348,1349,1439,1472,1473,1499,1746,1803,1975,2229,2354,2514,2523,2532,2706,2707,3235,3236,3427,3454,3567,3568,3601,3602,3708,3902,3903,3912,3918,3925,3926,4206,4207,302,305,
Hint=Rollease Acmeda ARC Motor Control v1.0
SMWRev=3.00.00
TIORev=0
S+=1
HelpID=1055
PdfHelp=Rollease Acmeda ARC Motor Control v1.0 Help.pdf
APg=1
StdCmd=0
FltTmp=1
FpCS=0
NumFixedInputs=8
NumFixedOutputs=6
NumFixedParams=2
MinVariableInputs=0
MinVariableInputsList2=0
MinVariableInputsList3=0
MinVariableOutputs=0
MinVariableOutputsList2=0
MinVariableOutputsList3=0
MinVariableParams=0
SymbolTree=32
InputSigType1=Digital
InputSigType2=Digital
InputSigType3=Digital
InputSigType4=Digital
InputSigType5=Digital
InputSigType6=Analog
InputSigType7=Digital
InputSigType8=Analog
OutputSigType1=Digital
OutputSigType2=Serial
OutputSigType3=Serial
OutputSigType4=Serial
OutputSigType5=Analog
ParamSigType1=String
ParamSigType2=List
InputCue1=Up_Open
InputCue2=Down_Close
InputCue3=Jog_Up_Open
InputCue4=Jog_Down_Close
InputCue5=Direct_Set_Position
InputCue6=Direct_Set_Position_Value
InputCue7=Direct_Set_Rotation
InputCue8=Direct_Set_Rotation_Value
OutputCue1=Is_Initialized
OutputCue2=Version
OutputCue3=Type
OutputCue4=Voltage
OutputCue5=Travel
OutputCue6=Rotation
ParamCue1=Motor_Address
ParamCue2=CommandProcessorID,1d,2d,3d,4d,5d,6d,7d,8d,9d,10d,11d,12d,13d,14d,15d,16d,17d,18d,19d,20d,21d,22d,23d,24d,25d,26d,27d,28d,29d,30d,31d,32d
MPi=8
Pi1=3
Pi2=4
Pi3=5
Pi4=6
Pi5=7
Pi6=8
Pi7=9
Pi8=10
MPo=6
Po1=11
Po2=12
Po3=13
Po4=14
Po5=15
Po6=16
MPp=2
Pp1=1
Pp2=2
FileName=Rollease Acmeda ARC Motor Control v1.0.umc
EncodingType=0
ZeroOnIoOk=0
]
[
ObjTp=Sm
H=1
SmC=157
Nm=Central Control Modules
ObjVer=1
CF=2
n1I=1
n1O=1
mI=1
mO=1
tO=1
mP=1
P1=
]
[
ObjTp=Sm
H=2
SmC=157
Nm=Network Modules
ObjVer=1
CF=2
n1I=1
n1O=1
mI=1
mO=1
tO=1
mP=1
P1=
]
[
ObjTp=Sm
H=3
SmC=157
Nm=Ethernet
ObjVer=1
CF=2
n1I=1
n1O=1
mI=1
mO=1
tO=1
mP=1
P1=
]
[
ObjTp=Sm
H=4
SmC=156
Nm=Logic
ObjVer=1
CF=2
mC=6
C1=8
C2=9
C3=10
C4=11
C5=7
C6=12
]
[
ObjTp=Sm
H=5
SmC=157
Nm=DefineArguments
ObjVer=1
CF=2
n1I=1
n1O=1
mC=1
C1=6
mI=1
mO=1
tO=1
mP=1
P1=
]
[
ObjTp=Sm
H=6
SmC=55
Nm=Argument Definition
ObjVer=1
PrH=5
CF=2
n1I=8
n1O=6
mI=8
I1=4
I2=5
I3=16
I4=18
I5=20
I6=22
I7=21
I8=23
mO=6
tO=6
O1=9
O2=10
O3=12
O4=15
O5=13
O6=14
mP=2
P1=Motor_Address
P2=CommandProcessorID
MPi=8
Pi1=3
Pi2=4
Pi3=5
Pi4=6
Pi5=7
Pi6=8
Pi7=9
Pi8=10
MPo=6
Po1=11
Po2=12
Po3=13
Po4=14
Po5=15
Po6=16
MPp=2
Pp1=1
Pp2=2
]
[
ObjTp=Sm
H=7
SmC=103
Nm=Rollease Acmeda Motor Control v1.0.usp
ObjVer=1
PrH=4
CF=2
n1I=10
n2I=2
n1O=3
mI=12
I3=6
I4=7
I5=8
I6=16
I7=18
I8=20
I9=21
I10=11
I11=22
I12=23
mO=8
tO=8
O3=9
O4=19
O5=17
O6=15
O7=10
O8=12
mP=3
P1=
P2=#Motor_Address
P3=#CommandProcessorID
]
[
ObjTp=Sm
H=8
SmC=28
Nm=Truth Table
ObjVer=1
PrH=4
CF=2
n1I=2
n1O=3
mI=2
I1=4
I2=5
mO=3
tO=3
O1=6
O2=7
O3=8
mP=5
P1=L,H,X
P2=L,X,H
P3=L,H,L
P4=L,L,H
P5=H,L,L
]
[
ObjTp=Sm
H=9
SmC=8
Nm=Oscillator
ObjVer=1
PrH=4
CF=2
n1I=1
n1O=1
Cmn1=Polling\\
mI=1
I1=9
mO=1
tO=1
O1=11
mP=2
P1=.2s
P2=20s
]
[
ObjTp=Sm
H=10
SmC=541
Nm=Analog Scaler with I/O Limits
ObjVer=1
PrH=4
CF=2
n1I=1
n1O=1
Cmn1=Travel\\
mI=1
I1=19
mO=1
tO=1
O1=13
mP=5
P1=0d
P2=180d
P3=0d
P4=65535d
P5=0d
]
[
ObjTp=Sm
H=11
SmC=541
Nm=Analog Scaler with I/O Limits
ObjVer=1
PrH=4
CF=2
n1I=1
n1O=1
Cmn1=Rotation\\
mI=1
I1=17
mO=1
tO=1
O1=14
mP=5
P1=0d
P2=180d
P3=0d
P4=65535d
P5=0d
]
[
ObjTp=Sm
H=12
SmC=858
Nm=Make String Permanent
ObjVer=1
PrH=4
CF=2
n1I=3
mI=3
I1=15
I2=10
I3=12
mP=1
P1=20d
]
[
ObjTp=Sg
H=4
Nm=Up_Open
]
[
ObjTp=Sg
H=5
Nm=Down_Close
]
[
ObjTp=Sg
H=6
Nm=Motor_Up_Open
]
[
ObjTp=Sg
H=7
Nm=Motor_Down_Close
]
[
ObjTp=Sg
H=8
Nm=Motor_Stop
]
[
ObjTp=Sg
H=9
Nm=Is_Initialized
]
[
ObjTp=Sg
H=10
Nm=Version
SgTp=4
]
[
ObjTp=Sg
H=11
Nm=Poll_OSC
]
[
ObjTp=Sg
H=12
Nm=Type
SgTp=4
]
[
ObjTp=Sg
H=13
Nm=Travel
SgTp=2
]
[
ObjTp=Sg
H=14
Nm=Rotation
SgTp=2
]
[
ObjTp=Sg
H=15
Nm=Voltage
SgTp=4
]
[
ObjTp=Sg
H=16
Nm=Jog_Up_Open
]
[
ObjTp=Sg
H=17
Nm=Rotation_Degrees
SgTp=2
]
[
ObjTp=Sg
H=18
Nm=Jog_Down_Close
]
[
ObjTp=Sg
H=19
Nm=Travel_Degrees
SgTp=2
]
[
ObjTp=Sg
H=20
Nm=Direct_Set_Position
]
[
ObjTp=Sg
H=21
Nm=Direct_Set_Rotation
]
[
ObjTp=Sg
H=22
Nm=Direct_Set_Position_Value
SgTp=2
]
[
ObjTp=Sg
H=23
Nm=Direct_Set_Rotation_Value
SgTp=2
]
[
ObjTp=Dp
H=1
Tp=1
FD1=The address of the motor to communicate with.
SD=Motor Address
HD=TRUE
DV=001
NoS=FALSE
EncFmt=0
DVLF=1
Sgn=0
]
[
ObjTp=Dp
H=2
Tp=1
FD1=The command processor ID. Match this with the value selected in||1
FD2=the Command Processor Module talking to the desired hub.
SD=Command Processor ID
NF=1
DNF=1
EncFmt=0
DVLF=1
VVS=2
VN=32
Val1=1d
Lbl1=CommandProcessor 1
Val2=2d
Lbl2=CommandProcessor 2
Val3=3d
Lbl3=CommandProcessor 3
Val4=4d
Lbl4=CommandProcessor 4
Val5=5d
Lbl5=CommandProcessor 5
Val6=6d
Lbl6=CommandProcessor 6
Val7=7d
Lbl7=CommandProcessor 7
Val8=8d
Lbl8=CommandProcessor 8
Val9=9d
Lbl9=CommandProcessor 9
Val10=10d
Lbl10=CommandProcessor 10
Val11=11d
Lbl11=CommandProcessor 11
Val12=12d
Lbl12=CommandProcessor 12
Val13=13d
Lbl13=CommandProcessor 13
Val14=14d
Lbl14=CommandProcessor 14
Val15=15d
Lbl15=CommandProcessor 15
Val16=16d
Lbl16=CommandProcessor 16
Val17=17d
Lbl17=CommandProcessor 17
Val18=18d
Lbl18=CommandProcessor 18
Val19=19d
Lbl19=CommandProcessor 19
Val20=20d
Lbl20=CommandProcessor 20
Val21=21d
Lbl21=CommandProcessor 21
Val22=22d
Lbl22=CommandProcessor 22
Val23=23d
Lbl23=CommandProcessor 23
Val24=24d
Lbl24=CommandProcessor 24
Val25=25d
Lbl25=CommandProcessor 25
Val26=26d
Lbl26=CommandProcessor 26
Val27=27d
Lbl27=CommandProcessor 27
Val28=28d
Lbl28=CommandProcessor 28
Val29=29d
Lbl29=CommandProcessor 29
Val30=30d
Lbl30=CommandProcessor 30
Val31=31d
Lbl31=CommandProcessor 31
Val32=32d
Lbl32=CommandProcessor 32
Sgn=0
]
[
ObjTp=Dp
H=3
Tp=2
DT=1
FD1=While the signal is high the motor is set to open. While both Open||1
FD2=and Close are low the motor is set to stop.
SD=latch high for motor open.
Trg=2
]
[
ObjTp=Dp
H=4
Tp=2
DT=1
FD1=While the signal is high the motor is set to close. While both Open||1
FD2=and Close are low the motor is set to stop.
SD=latch high for motor close.
Trg=2
]
[
ObjTp=Dp
H=5
Tp=2
DT=1
FD1=Use a momentary pulse to move the screen up a notch.
SD=Moves the screen up a notch.
Trg=2
]
[
ObjTp=Dp
H=6
Tp=2
DT=1
FD1=Use a momentary pulse to move the screen down a notch.
SD=Moves the screen down a notch.
Trg=2
]
[
ObjTp=Dp
H=7
Tp=2
DT=1
FD1=Pulse to set the screen position directly to the value in the Direct_Set_Position
FD2=_Value input signal.
SD=Sets the screen directly to the position value.
Trg=2
]
[
ObjTp=Dp
H=8
Tp=4
FD1=The value used when setting the postiion of the screen directly.
SD=The preset value for direct set position.
NF=63
DNF=1
]
[
ObjTp=Dp
H=9
Tp=2
DT=1
FD1=Pulse to set the screen rotation directly to the value in the Direct_Set_Rotation
FD2=_Value input signal.
SD=Sets the screen directly to the rotation value.
Trg=2
]
[
ObjTp=Dp
H=10
Tp=4
FD1=The value used when setting the rotation of the screen directly.
SD=The preset value for direct set rotation.
NF=63
DNF=1
]
[
ObjTp=Dp
H=11
Tp=3
DT=1
FD1=When this signal is high the module has initialized.
SD=High when this component is initilized.
]
[
ObjTp=Dp
H=12
Tp=7
DT=4
FD1=This is the version of the motor.
SD=Motor version
]
[
ObjTp=Dp
H=13
Tp=7
DT=4
FD1=This is the type of the motor.
SD=Motor Type
]
[
ObjTp=Dp
H=14
Tp=7
DT=4
FD1=All motors have voltage. AC motors the value doesn't change. DC||1
FD2=batteries the value changes over time.
SD=Motor Voltage
]
[
ObjTp=Dp
H=15
Tp=5
FD1=This is the position value of the motor.
SD=position value
DNF=1
]
[
ObjTp=Dp
H=16
Tp=5
FD1=This is the rotation value of the motor
SD=Rotation Value
DNF=1
]
